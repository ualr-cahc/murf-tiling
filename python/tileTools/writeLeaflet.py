def writeLeaflet(layers: dict[str, int], maxZoom: int, title: str) -> str:
    layers_fixed = {}
    for layer in layers:
        layer_fixed = ''
        for character in layer:
            if character.lower() in 'abcdefghijklmnopqrstuvwxyz$_1234567890':
                layer_fixed += character
            else:
                layer_fixed += "_"
        layers_fixed[f"L_{layer_fixed}"] = {'oldname': layer, 'maxNativeZoom': layers[layer]}
        
    text = """<!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="utf-8">
                <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
                <title>1998_AHTD_060772_LITRK_Hinson_Rd_Sidewalks_25.tif</title>

                <!-- Leaflet -->
                <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css" />
                <script src="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js"></script>

                <style>
                    body { margin:0; padding:0; }
                    body, table, tr, td, th, div, h1, h2, input { font-family: "Calibri", "Trebuchet MS", "Ubuntu", Serif; font-size: 11pt; }
                    #map { position:absolute; top:0; bottom:0; width:100%; } /* full size */
                    .ctl {
                        padding: 2px 10px 2px 10px;
                        background: white;
                        background: rgba(255,255,255,0.9);
                        box-shadow: 0 0 15px rgba(0,0,0,0.2);
                        border-radius: 5px;
                        text-align: right;
                    }
                    .title {
                        font-size: 18pt;
                        font-weight: bold;
                    }
                    .src {
                        font-size: 10pt;
                    }

                </style>

            </head>
            <body>

            <div id="map"></div>

            <script>
            /* **** Leaflet **** */

            // Base layers
            //  .. OpenStreetMap
            var osm = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors', maxNativeZoom: 18, maxZoom: """ + str(maxZoom) + """});

            // Overlay layers (TMS)
            """ + "\n            ".join(f"var {name} = L.tileLayer('./{layers_fixed[name]['oldname']}/{{z}}/{{x}}/{{y}}.png', {{tms: true, opacity: 0.7, attribution: '', maxZoom:{maxZoom}, maxNativeZoom: {layers_fixed[name]['maxNativeZoom']}}});" for name in layers_fixed)+"""                       

            // Map
            var map = L.map('map', {
                center: [34.773076232375914, -92.42107092780141],
                zoom: 8,
                maxZoom: """ + str(maxZoom) + """,
                layers: [osm]
            });

            var basemaps = {"OpenStreetMap": osm}
            var overlaymaps = {
                """ + "\n                ".join(f'"{name}": {name},' for name in layers_fixed) + """
            }
            // Title
            var title = L.control();
            title.onAdd = function(map) {
                this._div = L.DomUtil.create('div', 'ctl title');
                this.update();
                return this._div;
            };
            title.update = function(props) {
                this._div.innerHTML = '""" + title + """';
            };
            title.addTo(map);

            // Note
            var src = 'Generated by <a href="http://www.klokan.cz/projects/gdal2tiles/">GDAL2Tiles</a>, Copyright &copy; 2008 <a href="http://www.klokan.cz/">Klokan Petr Pridal</a>,  <a href="http://www.gdal.org/">GDAL</a> &amp; <a href="http://www.osgeo.org/">OSGeo</a> <a href="http://code.google.com/soc/">GSoC</a>';
            var title = L.control({position: 'bottomleft'});
            title.onAdd = function(map) {
                this._div = L.DomUtil.create('div', 'ctl src');
                this.update();
                return this._div;
            };
            title.update = function(props) {
                this._div.innerHTML = src;
            };
            title.addTo(map);


            // Add base layers
            L.control.layers(basemaps, overlaymaps, {collapsed: false}).addTo(map);

            // Fit to overlay bounds (SW and NE points with (lat, lon))
            // map.fitBounds([[34.77259443119747, -92.42051045688615], [34.773558033554366, -92.42163139871667]]);

            </script>

            </body>
            </html>"""
    return text
